types:
  static_obj_type:
    - art_receptacle_entity_type
    - obj_type
  obj_type:
    - movable_entity_type
    - goal_entity_type
  art_receptacle_entity_type:
    - cab_type
    - fridge_type

constants:
  - name: cab_push_point_7
    expr_type: cab_type
  - name: cab_push_point_6
    expr_type: cab_type
  - name: cab_push_point_5
    expr_type: cab_type
  - name: cab_push_point_4
    expr_type: cab_type
  - name: fridge_push_point
    expr_type: fridge_type

predicates:
  - name: holding
    args:
      - name: obj
        expr_type: movable_entity_type
      - name: robot
        expr_type: robot_entity_type
    is_valid_fn:
      # Function that checks if the predicate is satisfied. See
      # `pddl_defined_predicates.py` for the pre-defined instances of these
      # functions.
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_robot_hold_match
      hold_state: True
    set_state_fn:
      # Funtion that sets simulator state based on predicate arguments.
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_robot_holding
      hold_state: True

  - name: in
    args:
      - name: obj
        expr_type: obj_type
      - name: recep
        expr_type: art_receptacle_entity_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_inside

  - name: not_holding
    args:
      - name: robot
        expr_type: robot_entity_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_robot_hold_match
      hold_state: False
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_robot_holding
      hold_state: False

  - name: opened_cab
    args:
      - name: art_obj
        expr_type: cab_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_articulated_object_at_state
      target_val: 0.45
      cmp: 'greater'
      joint_dist_thresh: 0.1
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_articulated_object_at_state
      target_val: 0.45

  - name: closed_cab
    args:
      - name: art_obj
        expr_type: cab_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_articulated_object_at_state
      target_val: 0.0
      cmp: 'close'
      joint_dist_thresh: 0.15
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_articulated_object_at_state
      target_val: 0.0

  - name: opened_fridge
    args:
      - name: art_obj
        expr_type: fridge_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_articulated_object_at_state
      target_val: 1.22
      cmp: 'greater'
      joint_dist_thresh: 0.15
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_articulated_object_at_state
      target_val: 1.22

  - name: closed_fridge
    args:
      - name: art_obj
        expr_type: fridge_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_articulated_object_at_state
      target_val: 0.0
      cmp: 'close'
      joint_dist_thresh: 0.15

  - name: robot_at
    args:
      - name: at_entity
        expr_type: static_obj_type
      - name: robot
        expr_type: robot_entity_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_robot_at_position
      dist_thresh: 2.0
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_robot_position
      dist_thresh: 2.0

  - name: object_at
    args:
      - name: obj
        expr_type: movable_entity_type
      - name: at_entity
        expr_type: static_obj_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_object_at
      dist_thresh: 0.3
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_object_at

actions:
  - name: nav
    parameters:
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition:
      - robot_at(obj, robot)

  - name: nav_to_receptacle
    parameters:
      - name: marker
        expr_type: art_receptacle_entity_type
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - in(obj, marker)
    postcondition:
      - robot_at(marker, robot)

  - name: pick
    parameters:
      - name: obj
        expr_type: movable_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(obj, robot)
        - quantifier: FORALL
          inputs:
            - name: recep
              expr_type: cab_type
          expr_type: NAND
          sub_exprs:
            - in(obj, recep)
            - closed_cab(recep)
    postcondition:
      - holding(obj, robot)

  - name: place
    parameters:
      - name: place_obj
        expr_type: movable_entity_type
      - name: obj
        expr_type: goal_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - holding(place_obj, robot)
        - robot_at(obj, robot)
    postcondition:
      - not_holding(robot)
      - object_at(place_obj, obj)

  - name: open_fridge
    parameters:
      - name: fridge_id
        expr_type: fridge_type
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(fridge_id, robot)
        - closed_fridge(fridge_id)
        - in(obj,fridge_id)
    postcondition:
      - opened_fridge(fridge_id)

  - name: close_fridge
    parameters:
      - name: fridge_id
        expr_type: fridge_type
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(fridge_id, robot)
        - opened_fridge(fridge_id)
        - in(obj,fridge_id)
    postcondition:
      - closed_fridge(fridge_id)

  - name: open_cab
    parameters:
      - name: marker
        expr_type: cab_type
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(marker, robot)
        - closed_cab(marker)
        - in(obj,marker)
    postcondition:
      - opened_cab(marker)

  - name: close_cab
    parameters:
      - name: marker
        expr_type: cab_type
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(marker, robot)
        - opened_cab(marker)
        - in(obj,marker)
    postcondition:
      - closed_cab(marker)

  #########################################################
  # Receptacle name only based variants of the receptacle skills. This does not
  # require any information about knowing which objects the receptacle
  # contains.
  - name: nav_to_receptacle_by_name
    parameters:
      - name: marker
        expr_type: art_receptacle_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition:
      - robot_at(marker, robot)

  - name: open_fridge_by_name
    parameters:
      - name: fridge_id
        expr_type: fridge_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(fridge_id, robot)
        - closed_fridge(fridge_id)
    postcondition:
      - opened_fridge(fridge_id)

  - name: close_fridge_by_name
    parameters:
      - name: fridge_id
        expr_type: fridge_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(fridge_id, robot)
        - opened_fridge(fridge_id)
    postcondition:
      - closed_fridge(fridge_id)

  - name: open_cab_by_name
    parameters:
      - name: marker
        expr_type: cab_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(marker, robot)
        - closed_cab(marker)
    postcondition:
      - opened_cab(marker)

  - name: close_cab_by_name
    parameters:
      - name: marker
        expr_type: cab_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - robot_at(marker, robot)
        - opened_cab(marker)
    postcondition:
      - closed_cab(marker)
