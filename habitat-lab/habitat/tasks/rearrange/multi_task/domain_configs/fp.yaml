types:
  static_obj_type:
    - art_receptacle_entity_type
    - obj_type
  obj_type:
    - movable_entity_type
    - goal_entity_type
  art_receptacle_entity_type:
    - cab_type
    - fridge_type


constants: {}


predicates:
  - name: holding
    args:
      - name: obj
        expr_type: movable_entity_type
      - name: robot
        expr_type: robot_entity_type
    is_valid_fn:
      # Function that checks if the predicate is satisfied. See
      # `pddl_defined_predicates.py` for the pre-defined instances of these
      # functions.
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_robot_hold_match
      hold_state: True
    set_state_fn:
      # Funtion that sets simulator state based on predicate arguments.
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_robot_holding
      hold_state: True

  - name: in
    args:
      - name: obj
        expr_type: obj_type
      - name: recep
        expr_type: art_receptacle_entity_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_inside

  - name: not_holding
    args:
      - name: robot
        expr_type: robot_entity_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_robot_hold_match
      hold_state: False
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_robot_holding
      hold_state: False
  - name: robot_at
    args:
      - name: at_entity
        expr_type: static_obj_type
      - name: robot
        expr_type: robot_entity_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_robot_at_position
      dist_thresh: 2.0
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_robot_position
      dist_thresh: 2.0

  - name: object_at
    args:
      - name: obj
        expr_type: movable_entity_type
      - name: at_entity
        expr_type: static_obj_type
    is_valid_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.is_object_at
      dist_thresh: 0.3
    set_state_fn:
      _target_: habitat.tasks.rearrange.multi_task.pddl_defined_predicates.set_object_at

actions:
  - name: nav_to_goal
    parameters:
      - name: obj
        expr_type: movable_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      # The robot cannot be holding the object that it wants to navigate to.
      expr_type: NAND
      sub_exprs:
        - holding(obj, robot)
    postcondition:
      - robot_at(obj, robot)
    task_info:
      task: NavToObjTask-v0
      task_def: "nav_to_obj"
      config_args:
        task.force_regenerate: True
        task.should_save_to_cache: False

  - name: move_forward
    parameters:
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition: []

  - name: move_backward
    parameters:
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition: []

  - name: turn_left
    parameters:
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition: []

  - name: turn_right
    parameters:
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition: []

  - name: nav_to_obj
    parameters:
      - name: obj
        expr_type: goal_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition:
      - robot_at(obj, robot)
    task_info:
      task: NavToObjTask-v0
      task_def: "nav_to_obj"
      config_args:
        task.force_regenerate: True
        task.should_save_to_cache: False

  - name: nav_to_receptacle
    parameters:
      - name: marker
        expr_type: art_receptacle_entity_type
      - name: obj
        expr_type: obj_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - in(obj, marker)
    postcondition:
      - robot_at(marker, robot)
    task_info:
      task: NavToObjTask-v0
      task_def: "nav_to_obj"
      config_args:
        task.force_regenerate: True
        task.should_save_to_cache: False

  - name: pick
    parameters:
      - name: obj
        expr_type: movable_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - not_holding(robot)
        - robot_at(obj, robot)
        - quantifier: FORALL
          inputs:
            - name: recep
              expr_type: cab_type
          expr_type: NAND
          sub_exprs:
            - in(obj, recep)
            #- closed_cab(recep)
    postcondition:
      - holding(obj, robot)
    task_info:
      task: RearrangePickTask-v0
      task_def: "pick"
      config_args:
        habitat.task.should_enforce_target_within_reach: True
        habitat.task.force_regenerate: True
        habitat.task.base_angle_noise: 0.0
        habitat.task.base_noise: 0.0
        habitat.task.should_save_to_cache: False

  - name: place
    parameters:
      - name: place_obj
        expr_type: movable_entity_type
      - name: obj
        expr_type: goal_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition:
      expr_type: AND
      sub_exprs:
        - holding(place_obj, robot)
        - robot_at(obj, robot)
    postcondition:
      - not_holding(robot)
      - object_at(place_obj, obj)
    task_info:
      task: RearrangePlaceTask-v0
      task_def: "place"
      config_args:
        task.should_enforce_target_within_reach: True
        task.force_regenerate: True
        task.base_angle_noise: 0.0
        task.base_noise: 0.0
        task.should_save_to_cache: False

  #########################################################
  # Receptacle name only based variants of the receptacle skills. This does not
  # require any information about knowing which objects the receptacle
  # contains.
  - name: nav_to_receptacle_by_name
    parameters:
      - name: marker
        expr_type: art_receptacle_entity_type
      - name: robot
        expr_type: robot_entity_type
    precondition: null
    postcondition:
      - robot_at(marker, robot)
    task_info:
      task: NavToObjTask-v0
      task_def: "nav_to_obj"
      config_args:
        task.force_regenerate: True
        task.should_save_to_cache: False
